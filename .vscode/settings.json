{
    "cSpell.ignoreWords": [
        "a",
        "account",
        "action",
        "add",
        "adil",
        "admin",
        "alb",
        "alexa",
        "alias",
        "allow",
        "amazonaws",
        "amzn",
        "an",
        "api",
        "app",
        "are",
        "arn",
        "ask",
        "att",
        "attribute",
        "attributes",
        "auth",
        "authorizer",
        "auto",
        "aws",
        "balancer",
        "billing",
        "bucket",
        "c",
        "can",
        "case",
        "change",
        "check",
        "client",
        "cloud",
        "cloudwatch",
        "code",
        "cognito",
        "com",
        "conditions",
        "configuration",
        "configure",
        "connect",
        "constraints",
        "create",
        "custom",
        "data",
        "db",
        "dc",
        "defaults",
        "define",
        "definitions",
        "deployment",
        "description",
        "detail",
        "details",
        "dev",
        "dir",
        "documentation",
        "dynamo",
        "dynamodb",
        "east",
        "ec",
        "effect",
        "elasticloadbalancing",
        "email",
        "enabled",
        "env",
        "environment",
        "errors",
        "event",
        "events",
        "example",
        "exclude",
        "execute",
        "existence",
        "explicit",
        "export",
        "false",
        "family",
        "few",
        "flows",
        "fn",
        "following",
        "foo",
        "for",
        "formation",
        "framework",
        "from",
        "function",
        "function's",
        "functions",
        "gateway",
        "get",
        "give",
        "given",
        "gmail",
        "greeter",
        "handler",
        "hash",
        "hello",
        "here",
        "home",
        "host",
        "http",
        "https",
        "iam",
        "id",
        "include",
        "index",
        "information",
        "instance",
        "invoke",
        "iot",
        "join",
        "js",
        "key",
        "lambda",
        "length",
        "list",
        "listener",
        "load",
        "log",
        "lowercase",
        "make",
        "me",
        "method",
        "min",
        "minimum",
        "minutes",
        "mode",
        "mutable",
        "my",
        "name",
        "new",
        "nodejs",
        "note",
        "notification",
        "numbers",
        "object",
        "output",
        "outputs",
        "overwrite",
        "package",
        "packaging",
        "parameters",
        "password",
        "path",
        "pay",
        "pending",
        "per",
        "permission",
        "please",
        "plugins",
        "policies",
        "policy",
        "pool",
        "post",
        "pre",
        "prevent",
        "priority",
        "properties",
        "provider",
        "prs",
        "pseudo",
        "put",
        "rate",
        "ref",
        "refresh",
        "region",
        "request",
        "require",
        "required",
        "resource",
        "resources",
        "rest",
        "restaurants",
        "role",
        "runtime",
        "s",
        "scan",
        "schedule",
        "schema",
        "search",
        "select",
        "self",
        "sensitive",
        "server",
        "serverless",
        "service",
        "service prs workshop framework version custom name adil email uganoghli gmail com provider aws runtime nodejs x iam role statements effect allow action dynamodb scan resource get att restaurants table arn execute api invoke region account id gateway rest self stage add an to give permission for plugins serverless export env pseudo parameters you can overwrite defaults here dev us east the lambda function's s list bucket fn join ref deployment put object define wide environment variables variable value packaging information package include me js dir exclude functions index handler events http path method https amazonaws authorizer search post following are a few example configure note please make sure change your code work with those check event documentation details users create websocket connect schedule rate minutes sns greeter topic stream xxxxxx foo t alexa skill amzn ask xx smart home iot sql select from some cloudwatch source ec detail type instance state notification pending log hello cognito user pool my trigger pre sign up alb listener elasticloadbalancing app load balancer dc c priority conditions host function cloud formation templates resources dynamo db properties billing mode pay per request attribute definitions key schema hash alias attributes username configuration case sensitive false auto verified policies password policy minimum length require lowercase true numbers uppercase symbols data string mutable given required constraints min family web client explicit auth flows srp refresh token prevent existence errors enabled server admin new outputs output description",
        "sign",
        "skill",
        "smart",
        "sns",
        "some",
        "source",
        "sql",
        "srp",
        "stage",
        "state",
        "statements",
        "stream",
        "string",
        "sure",
        "symbols",
        "t",
        "table",
        "templates",
        "the",
        "those",
        "to",
        "token",
        "topic",
        "trigger",
        "true",
        "type",
        "uganoghli",
        "up",
        "uppercase",
        "us",
        "user",
        "username",
        "users",
        "value",
        "variable",
        "variables",
        "verified",
        "version",
        "web",
        "websocket",
        "wide",
        "with",
        "work",
        "workshop",
        "x",
        "xx",
        "xxxxxx",
        "you",
        "your"
    ]
}